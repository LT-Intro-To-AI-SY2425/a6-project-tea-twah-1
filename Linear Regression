from ucimlrepo import fetch_ucirepo 

# fetch dataset 
estimation_of_obesity_levels_based_on_eating_habits_and_physical_condition = fetch_ucirepo(id=544) 
  
# data (as pandas dataframes) 
X = estimation_of_obesity_levels_based_on_eating_habits_and_physical_condition.data.features 
y = estimation_of_obesity_levels_based_on_eating_habits_and_physical_condition.data.targets 
  
# metadata 
print(estimation_of_obesity_levels_based_on_eating_habits_and_physical_condition.metadata) 
  
# variable information 
print(estimation_of_obesity_levels_based_on_eating_habits_and_physical_condition.variables) 

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

data = pd.read_csv("ObesityDataSet_raw_and_data_sinthetic.csv") 

data['NObeyesdad'].replace (['Insufficient_Weight','Normal_Weight', 'Overweight_Level_I','Overweight_Level_II', 'Obesity_Type_I','Obesity_Type_II', 'Obesity_Type_III'], [0,1,2,3,4,5,6], inplace=True)


x = data[["Age"]].values
y = data[['NObeyesdad']].values


# age_to_predict = 43
# predicted_obesity = model.predict(np.array([[age_to_predict]]))

xtrain, xtest, ytrain, ytest = train_test_split(x, y)
model = LogisticRegression().fit(xtrain, ytrain)

print ("Accuracy:", model.score(xtest,ytest))

plt.scatter(x, y, color='blue', label='Data Points')
plt.plot(x, model.predict(x), color='red', label='Line of Best Fit')
plt.xlabel('Age')
plt.ylabel('Obesity')
plt.title('Obesity vs Age')
plt.legend()
plt.show()