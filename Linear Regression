from ucimlrepo import fetch_ucirepo 
  
# fetch dataset 
estimation_of_obesity_levels_based_on_eating_habits_and_physical_condition = fetch_ucirepo(id=544) 
  
# data (as pandas dataframes) 
X = estimation_of_obesity_levels_based_on_eating_habits_and_physical_condition.data.features 
y = estimation_of_obesity_levels_based_on_eating_habits_and_physical_condition.data.targets 
  
# metadata 
print(estimation_of_obesity_levels_based_on_eating_habits_and_physical_condition.metadata) 
  
# variable information 
print(estimation_of_obesity_levels_based_on_eating_habits_and_physical_condition.variables) 

data["Normal_Weight"].replace(0, np.nan, inplace=True)
data["Overweight_Level_I"].replace(1, np.nan, inplace=True)
data["Overweight_Level_II"].replace(2, np.nan, inplace=True)
data["Obesity_Type_I"].replace(3, np.nan, inplace=True)
data["Obesity_Type_II"].replace(4, np.nan, inplace=True)
data["Obesity_Type_III"].replace(4, np.nan, inplace=True)

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

data = pd.read_csv("ObesityDataSet_raw_and_data_sinthetic.csv")

x = data["Age"].values
y = data["NObeyesdad"].values


x = x.reshape(-1, 1)

model = LinearRegression().fit(x, y)

coef = round(float(model.coef_[0]), 2)
intercept = round(float(model.intercept_), 2)
r_squared = round(model.score(x, y), 2)

print(f"Linear Equation: y = {coef} * x + {intercept}")
print(f"R-squared: {r_squared}")

age_to_predict = 43
predicted_obesity = model.predict(np.array([[age_to_predict]]))
print(f"Predicted blood pressure for a 43-year-old: {round(predicted_obesity[0], 2)}")

plt.scatter(x, y, color='blue', label='Data Points')
plt.plot(x, model.predict(x), color='red', label='Line of Best Fit')
plt.xlabel('Age')
plt.ylabel('Obesity')
plt.title('Obesity vs Age')
plt.legend()
plt.show()

# Find the coefficient, bias, and r squared values. 
# Each should be a float and rounded to two decimal places. 


# Print out the linear equation and r squared value

# Predict the the blood pressure of someone who is 43 years old.
# Print out the prediction

# Create the model in matplotlib and include the line of best fit